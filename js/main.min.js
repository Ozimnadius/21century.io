//@prepros-append pages/common.js
//@prepros-append pages/index.js
//@prepros-append pages/ymaps.js

//@prepros-append pages/swiper.js
$.fn.hyphenate = function () {
    var all = "[абвгдеёжзийклмнопрстуфхцчшщъыьэюя]",
        glas = "[аеёиоуыэю\я]",
        sogl = "[бвгджзклмнпрстфхцчшщ]",
        zn = "[йъь]",
        shy = "\xAD",
        re = [];

    re[1] = new RegExp("(" + zn + ")(" + all + all + ")", "ig");
    re[2] = new RegExp("(" + glas + ")(" + glas + all + ")", "ig");
    re[3] = new RegExp("(" + glas + sogl + ")(" + sogl + glas + ")", "ig");
    re[4] = new RegExp("(" + sogl + glas + ")(" + sogl + glas + ")", "ig");
    re[5] = new RegExp("(" + glas + sogl + ")(" + sogl + sogl + glas + ")", "ig");
    re[6] = new RegExp("(" + glas + sogl + sogl + ")(" + sogl + sogl + glas + ")", "ig");
    return this.each(function () {
        var text = $(this).html();
        for (var i = 1; i < 7; ++i) {
            text = text.replace(re[i], "$1" + shy + "$2");
        }
        $(this).html(text);
    });
};

function getComputedTranslateY(obj) {
    if (!window.getComputedStyle) return;
    var style = getComputedStyle(obj),
        transform = style.transform || style.webkitTransform || style.mozTransform;
    var mat = transform.match(/^matrix3d\((.+)\)$/);
    if (mat) return parseFloat(mat[1].split(', ')[13]);
    mat = transform.match(/^matrix\((.+)\)$/);
    return mat ? parseFloat(mat[1].split(', ')[5]) : 0;
}

function getCssValuePrefix() {
    var rtrnVal = '';//default to standard syntax
    var prefixes = ['-o-', '-ms-', '-moz-', '-webkit-'];

    // Create a temporary DOM object for testing
    var dom = document.createElement('div');

    for (var i = 0; i < prefixes.length; i++) {
        // Attempt to set the style
        dom.style.background = prefixes[i] + 'linear-gradient(#000000, #ffffff)';

        // Detect if the style was successfully set
        if (dom.style.background) {
            rtrnVal = prefixes[i];
        }
    }

    dom = null;
    delete dom;

    return rtrnVal;
}

function GetNoun(number, one, two, five) {
    number = Math.abs(number);
    number %= 100;
    if (number >= 5 && number <= 20) {
        return five;
    }
    number %= 10;
    if (number == 1) {
        return one;
    }
    if (number >= 2 && number <= 4) {
        return two;
    }
    return five;
}

function index(list, item) {
    return Array.prototype.indexOf.call(list, item);
}




(function () {

    let mnewsSwitches = $('.mnews__switch'),
        mnewsTabs = $('.mnews__tab'),
    maxH = 0;

    // mnewsTabs.each(function(indx, element){
    //     let item = $(element),
    //         height = item.outerHeight();
    //
    //     debugger;
    //
    //     if (maxH<height){
    //         maxH = height;
    //     }
    // });
    //
    // $('.mnews__tabs').css('height', maxH);


    mnewsSwitches.on('click', function (e) {
        let $this = $(this),
            id = $this.data('id'),
            tab = mnewsTabs.filter('[data-id='+id+']');

        mnewsTabs.removeClass('active');
        mnewsSwitches.removeClass('active');
        tab.addClass('active');
        $this.addClass('active');

    });
}());
/*YANDEX*/
$(function ()   {
    ymaps.ready(init);
    var myMap,
        myMap2,
        myPin,
        myPin2,
        myPlacemark,
        myPlacemark2;

    function init() {

        if ($('#mapOffice').length) {
            var center = [55.74214536925577,37.63092943254084];

            myMap = new ymaps.Map("mapOffice", {
                center: center,
                zoom: 17,
                // controls: []
            });


            myMap.behaviors.disable(['scrollZoom']);
            myMap.controls.remove('searchControl');
            // myMap.controls.remove('geolocationControl')
            //     .remove('searchControl')
            //     .remove('trafficControl')
            //     .remove('typeSelector')
            //     .remove('fullscreenControl')
            //     .remove('zoomControl')
            //     .remove('rulerControl');

            myPin = new ymaps.GeoObjectCollection({}, {
                // iconLayout: 'default#image',
                // iconImageHref: '/img/icons/map-marker.svg',
                // iconImageSize: [46, 57],
                // iconImageOffset: [-15, -55]
            });


            myPlacemark = new ymaps.Placemark([55.74214536925577,37.63092943254084], {
                    balloonContentHeader: "21 Век - центральный офис",
                    balloonContentBody: "Наружная реклама на вашей улице",
                    balloonContentFooter: "115326, г. Москва, ул. Пятницкая, д. 25, стр. 1 (здание Россия сегодня)",
                    hintContent: "21 Век - центральный офис"
                },
                {
                    iconLayout: 'default#image',
                    iconImageHref: 'images/content/pinLogo.svg',
                    iconImageSize: [40, 47],
                    iconImageOffset: [-20, -45]
                    // preset: 'islands#redGlyphIcon'
                });


            myPin.add(myPlacemark);
            myMap.geoObjects.add(myPin);
        }

        if ($('#mapStore').length) {
            var center = [55.79280915360965,37.49019607489651];

            myMap2 = new ymaps.Map("mapStore", {
                center: center,
                zoom: 17,
                // controls: []
            });


            myMap2.behaviors.disable(['scrollZoom']);
            myMap2.controls.remove('searchControl');
            // myMap.controls.remove('geolocationControl')
            //     .remove('searchControl')
            //     .remove('trafficControl')
            //     .remove('typeSelector')
            //     .remove('fullscreenControl')
            //     .remove('zoomControl')
            //     .remove('rulerControl');

            myPin2 = new ymaps.GeoObjectCollection({}, {
                // iconLayout: 'default#image',
                // iconImageHref: '/img/icons/map-marker.svg',
                // iconImageSize: [46, 57],
                // iconImageOffset: [-15, -55]
            });


            myPlacemark2 = new ymaps.Placemark([55.79280915360965,37.49019607489651], {
                    balloonContentHeader: "21 Век - склад",
                    balloonContentBody: "Наружная реклама на вашей улице",
                    balloonContentFooter: "Ул. Народного Ополчения улица д.43, корп.2 стр 5. (ст м Октябрьское поле, первый вагон из центра)",
                    hintContent: "21 Век - склад"
                },
                {
                    iconLayout: 'default#image',
                    iconImageHref: 'images/content/pinLogo.svg',
                    iconImageSize: [40, 47],
                    iconImageOffset: [-20, -45]
                    // preset: 'islands#redGlyphIcon'
                });


            myPin2.add(myPlacemark2);
            myMap2.geoObjects.add(myPin2);
        }

    }

});
/*END YANDEX*/
window.onload = function () {
    // initialize swiper when document ready
    let swiperSlider= new Swiper('.slider__container', {
        direction: 'horizontal',
        loop: true,
        speed: 700,
        slidesPerView: 1,
        grabCursor: true,
        autoplay: {
            delay: 5000,
        },
        pagination: {
            el: '.slider__pag-pag',
        },
    });

    let swiperTypes= new Swiper('.types__container', {
        direction: 'horizontal',
        loop: true,
        speed: 500,
        slidesPerView: 4,
        grabCursor: true,
        spaceBetween: 30,
        autoplay: {
            delay: 7000,
        },
        navigation: {
            nextEl: '.types__next',
            prevEl: '.types__prev',
        },
    });

    let swiperMnews= new Swiper('.mnews__container', {
        direction: 'horizontal',
        loop: true,
        speed: 500,
        slidesPerView: 2,
        grabCursor: true,
        spaceBetween: 30,
        navigation: {
            nextEl: '.mnews__next',
            prevEl: '.mnews__prev',
        },
        on:{
            init: function () {
                $('.mnews__tabs').css('height', $(this.wrapperEl).outerHeight());
            }
        }
    });


};

//# sourceMappingURL=main.min.js.map